@namespace BlazorUI
@inherits LzComponentBasePassViewModel<ILzSessionViewModel>


@if (ViewModel is not null)
{
	<MudSelect @bind-Value="culture"  TextChanged="OnSelectLanguage">
		@foreach(var culture in Messages!.Cultures)
		{
			<MudSelectItem Value="@culture.culture">@culture.name</MudSelectItem>
		}
	</MudSelect>
}

@code {
	private (string, string) culture;

	protected override void OnInitialized()
	{
		culture = (Messages!.Culture, "");
		base.OnInitialized();
	}

	private async void OnSelectLanguage(string cultureArg)
	{

		if (cultureArg != "en-US")
			await SetToMetric(cultureArg);
		else
			await SetToImperial(cultureArg);
	}

	private async Task SetToImperial(string cultureKey)
	{
		if (ViewModel is null) return;
		ViewModel.MessageSetSelector = new LzMessageSetSelector(cultureKey, LzMessageUnits.Imperial);
		await Messages!.SetMessageSetAsync(cultureKey, LzMessageUnits.Imperial);
		Messages!.Refresh();
	}

	private async Task SetToMetric(string cultureKey)
	{
		if (ViewModel is null) return;
		ViewModel.MessageSetSelector = new LzMessageSetSelector(cultureKey, LzMessageUnits.Metric);
		await Messages!.SetMessageSetAsync(cultureKey, LzMessageUnits.Metric);
		Messages!.Refresh();
	}
}