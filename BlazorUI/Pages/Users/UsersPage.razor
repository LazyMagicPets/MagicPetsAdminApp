@namespace BlazorUI
@page "/UsersPage"
@inherits LzCoreComponentBasePassViewModel<UsersViewModel>
@inject ISessionsViewModel SessionsViewModel
@inject NavigationManager NavigationManager
<MudPaper Class="d-flex flex-column">
    <h3>UsersPage</h3>
    @if (ViewModel!.IsLoading)
    {
        <Busy />
    }
    else
    {
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await OnUserAdd())">Add User</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await OnRefresh())">Refresh</MudButton>
        <MudDataGrid T="UserViewModel"
                     MultiSelection="false"
                     Items="items"
                     SortMode="SortMode.Multiple"
                     Filterable="true"
                     Hidable="true"
                     RowClick="@OnUserEdit">
            <ToolBarContent>

            </ToolBarContent>
            <Columns>
                <SelectColumn T="UserViewModel" />
                <PropertyColumn Property="x => x!.Data!.Name" Title="Name" />
                <PropertyColumn Property="x => x!.Data!.Login" Title="Login" />
                <PropertyColumn Property="x => x!.Data!.Email" Title="Email" />
                <PropertyColumn Property="x => x!.Data!.Phone" Title="Phone" />
            </Columns>
            <PagerContent>
                <MudDataGridPager T="UserViewModel" />
            </PagerContent>

        </MudDataGrid>

    }
</MudPaper>

@code {
    private string testString = string.Empty;
    private IEnumerable<UserViewModel>? items => ViewModel!.ViewModels.Values;


    protected override void OnInitialized()
    {
        ViewModel = SessionsViewModel!.SessionViewModel!.UsersViewModel;
        base.OnInitialized();
    }

    private async Task OnRefresh()
    {
        await ViewModel!.ReadAsync();
    }

    private async Task OnUserAdd()
    {
        await ViewModel!.CreateAsync();
       
        NavigationManager.NavigateTo("UserEditPage");

    }
    private Task OnUserEdit(DataGridRowClickEventArgs<UserViewModel> args)
    {
        ViewModel!.CurrentViewModel = args.Item;
        NavigationManager.NavigateTo("UserEditPage");
        return Task.CompletedTask;
    }

}
